{"version":3,"sources":["_/app/app-history.ts","_/demos/todos-rtk/filter/slice/filter.slice.ts","_/demos/todos-rtk/todos/slice/todos.slice.ts","_/app/app-store.ts","_/app/AppProviders.tsx","_/demos/home/view/HomePage.tsx","_/demos/todos-rtk/todos/view/AddTodoForm.tsx","_/demos/todos-rtk/filter/slice/filter.selectors.ts","_/demos/todos-rtk/todos/slice/todos.selectors.ts","_/demos/todos-rtk/todos/view/TodoListItem.tsx","_/demos/todos-rtk/todos/view/VisibleTodoList.tsx","_/demos/todos-rtk/filter/view/FilterButton.tsx","_/demos/todos-rtk/filter/view/Footer.tsx","_/demos/todos-rtk/TodosRtkPage.tsx","_/app/AppPages.tsx","_/app/AppLayout.tsx","mount-app.tsx","index.ts","_/utils/stable-sort.util.ts","_/apis/contacts/contacts.mocks.ts","_/apis/mocks.ts","_/utils/env.utils.ts"],"names":["appHistory","createHashHistory","VisibilityFilters","initialState","visibilityFilterSlice","createSlice","name","reducers","setVisibilityFilter","state","action","payload","actions","nextTodoId","todosSlice","addTodo","prepare","text","id","reducer","push","completed","toggleTodo","todo","find","rootSliceGroup","addReducers","router","connectRouter","middleware","getDefaultMiddleware","thunk","concat","routerMiddleware","appStore","configureSagaStore","theme","createMuiTheme","AppProviders","props","children","store","history","ThemeProvider","CssBaseline","HomePage","libs","map","lib","key","href","url","rel","target","AddTodoForm","useState","todoText","setTodoText","dispatch","useDispatch","onSubmit","e","preventDefault","onChange","value","disabled","trim","type","visibilityFilterSelector","todosSelector","visibleTodosSelector","createSelector","todos","filter","t","Error","TodoListItem","onClick","style","textDecoration","VisibleTodoList","useSelector","FilterButton","activeFilter","marginLeft","Footer","TodosRtkPage","pages","route","AppPages","fallback","component","exact","path","TodosSfrPage","ContactsQrsPage","lazy","pathnameSelector","location","pathname","AppLayout","classes","useStyles","className","root","AppBar","appBar","position","Toolbar","Typography","noWrap","variant","page","p","getPageName","Drawer","drawer","paper","drawerPaper","List","disablePadding","ListItem","dense","ListItemText","primary","secondary","Divider","button","selected","content","toolbar","makeStyles","createStyles","width","zIndex","flexGrow","padding","spacing","flexShrink","display","mixins","mountElement","document","getElementById","mountApp","reactDomRender","a","require","worker","start","init","sort","array","orderBy","orderDir","cmp","stabilizedThis","el","index","b","order","stableSort","compareObjProps","getCompareFunc","fields","Array","isArray","result","i","length","compareObjProp","aValue","bValue","contactsMocks","rest","get","apiBaseUrl","req","res","ctx","query","contacts","getContacts","parseUrl","delay","status","json","post","newContact","body","Date","getTime","put","updatedContact","findIndex","s","delete","contactId","params","parseInt","splice","setupWorker","process"],"mappings":"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","file":"static/js/main.96d7a8f1.chunk.js","sourcesContent":["import { createHashHistory } from 'history';\n\nexport const appHistory = createHashHistory();\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport type VisibilityFilter = 'SHOW_ACTIVE' | 'SHOW_ALL' | 'SHOW_COMPLETED';\n\nexport const VisibilityFilters: { [k: string]: VisibilityFilter } = {\n  SHOW_ACTIVE: 'SHOW_ACTIVE',\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n};\n\nexport type VisibilityFilterState = VisibilityFilter;\n\nconst initialState: VisibilityFilterState = VisibilityFilters.SHOW_ALL;\n\nexport const visibilityFilterSlice = createSlice({\n  initialState,\n  name: 'visibilityFilter',\n  reducers: {\n    setVisibilityFilter(state, action) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { setVisibilityFilter } = visibilityFilterSlice.actions;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { Todo } from '_/types/todo.type';\n\nexport type TodosState = Todo[];\n\nlet nextTodoId = 0;\n\nexport const todosSlice = createSlice({\n  initialState: [],\n  name: 'todos',\n  reducers: {\n    addTodo: {\n      // @ts-ignore\n      prepare(text: string) {\n        return { payload: { id: nextTodoId++, text } };\n      },\n      reducer(state: TodosState, action) {\n        const { id, text } = action.payload;\n        state.push({ completed: false, id, text });\n      },\n    },\n    toggleTodo(state: TodosState, action) {\n      const todo = state.find((todo) => todo.id === action.payload);\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    },\n  },\n});\n\nexport const { addTodo, toggleTodo } = todosSlice.actions;\n","import { getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { configureSagaStore } from '@vmw/queue-for-redux-saga';\nimport { rootSliceGroup } from '@vmw/slices-for-redux';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { appHistory } from './app-history';\nimport { visibilityFilterSlice } from '_/demos/todos-rtk/filter/slice/filter.slice';\nimport { todosSlice } from '_/demos/todos-rtk/todos/slice/todos.slice';\n\n// add slice reducers\nrootSliceGroup.addReducers({\n  // Add the ConnectedRouter's reducer to the rootReducer\n  // @ts-ignore\n  router: connectRouter(appHistory),\n  // standard reducers are explicitly added here\n  [visibilityFilterSlice.name]: visibilityFilterSlice.reducer,\n  [todosSlice.name]: todosSlice.reducer,\n});\n\n// Note: middleware is an Array\nconst middleware = getDefaultMiddleware({\n  //   immutableCheck: true, // default is true\n  //   serializableCheck: true, // default is true\n  thunk: true, // configureSagaStore default is false\n}).concat([\n  // routerMiddleware syncs the window location path into the store.\n  routerMiddleware(appHistory),\n]);\n\n// Create the Redux store\nexport const appStore = configureSagaStore({\n  middleware,\n  reducer: rootSliceGroup.reducer,\n});\n","import React, { ReactNode } from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { appStore } from './app-store';\nimport { appHistory } from '_/app/app-history';\n\nconst theme = createMuiTheme({\n  // palette: {\n  //   primary: {\n  //     main: '#0000aa',\n  //   },\n  //   secondary: {\n  //     main: '#00aa00',\n  //   },\n  // },\n});\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport function AppProviders(props: Props) {\n  const { children } = props;\n  return (\n    <Provider store={appStore}>\n      <ConnectedRouter history={appHistory}>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          {children}\n        </ThemeProvider>\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n","import React from 'react';\n\nfunction HomePage() {\n  return (\n    <div>\n      <p>Demo app to showcase, compare and test some libraries for Redux.</p>\n\n      <p>These include:</p>\n\n      <ul>\n        {libs.map((lib) => (\n          <li key={lib.name}>\n            <a href={lib.url} rel=\"noopener noreferrer\" target=\"_blank\">\n              {lib.name}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n// eslint-disable-next-line import/no-default-export\nexport default HomePage;\n\nconst libs = [\n  { name: '@reduxjs/toolkit', url: 'https://redux-toolkit.js.org/' },\n  {\n    name: '@vmw/slices-for-redux',\n    url: 'https://vmware.github.io/slices-for-redux/',\n  },\n  {\n    name: '@vmw/queue-for-redux-saga',\n    url: 'https://vmware.github.io/queue-for-redux-saga/',\n  },\n  { name: 'redux-saga', url: 'https://redux-saga.js.org/' },\n];\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTodo } from '../slice/todos.slice';\n\nexport function AddTodoForm() {\n  const [todoText, setTodoText] = useState('');\n  const dispatch = useDispatch();\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setTodoText(e.target.value);\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        dispatch(addTodo(todoText));\n        setTodoText('');\n      }}\n    >\n      <input onChange={onChange} value={todoText} />\n      <button disabled={!todoText.trim()} type=\"submit\">\n        Add Todo\n      </button>\n    </form>\n  );\n}\n","import { VisibilityFilterState, visibilityFilterSlice } from './filter.slice';\n\nconst sliceSelector = (state: any) =>\n  state[visibilityFilterSlice.name] as VisibilityFilterState;\n\nexport const visibilityFilterSelector = sliceSelector;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { visibilityFilterSelector } from '../../filter/slice/filter.selectors';\nimport { VisibilityFilters } from '../../filter/slice/filter.slice';\nimport { TodosState, todosSlice } from './todos.slice';\n\nconst sliceSelector = (state: any) => state[todosSlice.name] as TodosState;\n\nexport const todosSelector = sliceSelector;\n\nexport const visibleTodosSelector = createSelector(\n  [todosSelector, visibilityFilterSelector],\n  (todos, filter) => {\n    switch (filter) {\n      case VisibilityFilters.SHOW_ALL:\n        return todos;\n      case VisibilityFilters.SHOW_COMPLETED:\n        return todos.filter((t) => t.completed);\n      case VisibilityFilters.SHOW_ACTIVE:\n        return todos.filter((t) => !t.completed);\n      default:\n        throw new Error(`Unknown filter: ${filter}`);\n    }\n  }\n);\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\nimport React from 'react';\n\ntype Props = {\n  completed: boolean;\n  onClick: () => void;\n  text: string;\n};\n\nexport function TodoListItem({ completed, onClick, text }: Props) {\n  return (\n    <li\n      onClick={onClick}\n      style={{\n        textDecoration: completed ? 'line-through' : 'none',\n      }}\n    >\n      {text}\n    </li>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { visibleTodosSelector } from '../slice/todos.selectors';\nimport { toggleTodo } from '../slice/todos.slice';\nimport { TodoListItem } from './TodoListItem';\n\nexport function VisibleTodoList() {\n  const dispatch = useDispatch();\n  const todos = useSelector(visibleTodosSelector);\n\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <TodoListItem\n          key={todo.id}\n          {...todo}\n          onClick={() => dispatch(toggleTodo(todo.id))}\n        />\n      ))}\n    </ul>\n  );\n}\n","import React, { ReactNode } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { visibilityFilterSelector } from '../slice/filter.selectors';\nimport { setVisibilityFilter } from '../slice/filter.slice';\n\ntype Props = {\n  children: ReactNode;\n  filter: string;\n};\n\nexport function FilterButton(props: Props) {\n  const { children, filter } = props;\n\n  const dispatch = useDispatch();\n  const activeFilter = useSelector(visibilityFilterSelector);\n\n  return (\n    <button\n      disabled={activeFilter === filter}\n      onClick={() => dispatch(setVisibilityFilter(filter))}\n      style={{\n        marginLeft: '4px',\n      }}\n    >\n      {children}\n    </button>\n  );\n}\n","import React from 'react';\nimport { FilterButton } from './FilterButton';\nimport { VisibilityFilters } from '../slice/filter.slice';\n\nexport function Footer() {\n  return (\n    <div>\n      <span>Show: </span>\n      <FilterButton filter={VisibilityFilters.SHOW_ALL}>All</FilterButton>\n      <FilterButton filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterButton>\n      <FilterButton filter={VisibilityFilters.SHOW_COMPLETED}>\n        Completed\n      </FilterButton>\n    </div>\n  );\n}\n","import React from 'react';\nimport { AddTodoForm } from './todos/view/AddTodoForm';\nimport { VisibleTodoList } from './todos/view/VisibleTodoList';\nimport { Footer } from './filter/view/Footer';\n\nexport const TodosRtkPage = () => (\n  <div>\n    <AddTodoForm />\n    <VisibleTodoList />\n    <Footer />\n  </div>\n);\n","import React, { Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport HomePage from '_/demos/home/view/HomePage';\nimport { TodosRtkPage } from '_/demos/todos-rtk/TodosRtkPage';\n\nexport const pages = [\n  { name: 'Home', route: '/' },\n  { name: 'Todos RTK', route: '/todos-rtk' },\n  { name: 'Todos SFR', route: '/todos-sfr' },\n  { name: 'Contacts QRS', route: '/contacts-qrs' },\n];\n\nexport function getPageName(pathname: string) {\n  const page = pages.find((p) => p.route === pathname);\n  if (page) {\n    return page.name;\n  }\n  return 'Page Not Found';\n}\n\nexport function AppPages() {\n  return (\n    <Suspense fallback={<h3>Loading...</h3>}>\n      <Switch>\n        <Route component={HomePage} exact path=\"/\" />\n        <Route component={TodosRtkPage} exact path=\"/todos-rtk\" />\n        <Route component={TodosSfrPage} exact path=\"/todos-sfr\" />\n        <Route component={ContactsQrsPage} exact path=\"/contacts-qrs\" />\n        <Route path=\"\">\n          <div>\n            <h1>Page Not Found</h1>\n          </div>\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n}\n\nconst TodosSfrPage = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"TodosSfr\" */\n      '_/demos/todos-sfr/TodosSfrPage'\n    )\n);\n\nconst ContactsQrsPage = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"ContactsQrs\" */\n      '_/demos/contacts-qrs/ContactsQrsPage'\n    )\n);\n","/* eslint-disable import/max-dependencies */\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { AppPages, pages, getPageName } from './AppPages';\n\nfunction pathnameSelector(state: any) {\n  return state.router.location.pathname;\n}\n\nexport function AppLayout() {\n  const dispatch = useDispatch();\n  const pathname = useSelector(pathnameSelector);\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar} position=\"fixed\">\n        <Toolbar>\n          <Typography noWrap variant=\"h6\">\n            {getPageName(pathname)}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        variant=\"permanent\"\n      >\n        <List disablePadding>\n          <ListItem dense>\n            <ListItemText\n              primary={\n                <Typography variant=\"subtitle1\">Redux Libs Demos</Typography>\n              }\n              secondary=\"v0.1.0\"\n            />\n          </ListItem>\n\n          <Divider />\n          {pages.map((page) => (\n            <ListItem\n              button\n              key={page.route}\n              onClick={() => dispatch(push(page.route))}\n              selected={pathname === page.route}\n            >\n              <ListItemText primary={page.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <AppPages />\n      </main>\n    </div>\n  );\n}\n\nconst drawerWidth = 180;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(2),\n    },\n    drawer: {\n      flexShrink: 0,\n      width: drawerWidth,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    root: {\n      display: 'flex',\n    },\n    toolbar: theme.mixins.toolbar,\n  })\n);\n","import React from 'react';\nimport { render as reactDomRender } from 'react-dom';\n\nimport { AppProviders } from '_/app/AppProviders';\nimport { AppLayout } from '_/app/AppLayout';\n\nimport './index.css';\n\nconst mountElement = document.getElementById('root');\n\nexport function mountApp() {\n  reactDomRender(\n    <AppProviders>\n      <AppLayout />\n    </AppProviders>,\n    mountElement\n  );\n}\n\n// export function main() {\n//   render();\n// }\n","import { mountApp } from './mount-app';\nimport { isMock } from '_/utils/is-mock.util';\n\nasync function init() {\n  // Uncomment condition to exclude mock from the production build\n  // if (process.env.NODE_ENV === 'development') {\n  /* istanbul ignore next */\n  if (isMock) {\n    // Use mock data\n    const { worker } = require('./_/apis/mocks');\n    await worker.start();\n  }\n  mountApp();\n}\n\ninit();\n","export function sort(\n  array: any[],\n  orderBy: string | string[],\n  orderDir: 'desc' | 'asc' | undefined\n): any[] {\n  return stableSort(array, getCompareFunc(orderBy, orderDir));\n}\n\nfunction stableSort(array: any[], cmp: (a: any, b: any) => number): any[] {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction getCompareFunc(\n  orderBy: string | string[],\n  orderDir: 'desc' | 'asc' | undefined\n): (a: any, b: any) => number {\n  return orderDir === 'desc'\n    ? (a: any, b: any) => compareObjProps(a, b, orderBy)\n    : (a: any, b: any) => -compareObjProps(a, b, orderBy);\n}\n\nfunction compareObjProps(a: any, b: any, orderBy: string | string[]): number {\n  const fields: string[] = Array.isArray(orderBy) ? orderBy : [orderBy];\n  let result = 0;\n  for (let i = 0; i < fields.length; i += 1) {\n    result = compareObjProp(a, b, fields[i]);\n    if (result !== 0) {\n      break;\n    }\n  }\n  return result;\n}\n\nfunction compareObjProp(a: any, b: any, orderBy: string): number {\n  const aValue = a[orderBy];\n  const bValue = b[orderBy];\n  if (bValue < aValue) {\n    return -1;\n  }\n  if (bValue > aValue) {\n    return 1;\n  }\n  return 0;\n}\n","import { rest } from 'msw';\nimport { parseUrl } from 'query-string';\nimport { Contact } from '_/types/contact.type';\nimport { apiBaseUrl } from '_/utils/env.utils';\nimport { sort } from '_/utils/stable-sort.util';\nimport contacts from './contacts.mock-data.json';\n\nconst isTest = process.env.NODE_ENV === 'test';\nconst delay = isTest ? 0 : 700;\n\nfunction getContacts(query: any): Contact[] {\n  if (!query) {\n    return contacts;\n  }\n  const { orderBy, orderDir } = query;\n  return sort(contacts, orderBy, orderDir);\n}\n\nconst getHandler = rest.get(`/${apiBaseUrl}/contacts`, (req, res, ctx) => {\n  const { query } = parseUrl(req.url.href);\n  const result = getContacts(query);\n  return res(ctx.delay(delay), ctx.status(200), ctx.json(result));\n});\n\nconst postHandler = rest.post(`/${apiBaseUrl}/contacts`, (req, res, ctx) => {\n  const newContact = req.body as Contact;\n  newContact.id = new Date().getTime();\n  contacts.push(newContact);\n  return res(ctx.delay(delay), ctx.status(200), ctx.json(newContact));\n});\n\nconst putHandler = rest.put(\n  `/${apiBaseUrl}/contacts/:contactId`,\n  (req, res, ctx) => {\n    const updatedContact = req.body as Contact;\n    const index = contacts.findIndex(\n      (s: Contact) => s.id === updatedContact.id\n    );\n    if (index !== -1) {\n      contacts[index] = updatedContact;\n    }\n    return res(ctx.delay(delay), ctx.status(200), ctx.json(updatedContact));\n  }\n);\n\nconst deleteHandler = rest.delete(\n  `/${apiBaseUrl}/contacts/:contactId`,\n  (req, res, ctx) => {\n    const { contactId } = req.params;\n    const id = parseInt(contactId, 10);\n    const index = contacts.findIndex((s: Contact) => s.id === id);\n    if (index !== -1) {\n      contacts.splice(index, 1);\n    }\n    return res(ctx.delay(delay), ctx.status(204, 'Deleted'));\n  }\n);\n\nexport const contactsMocks = [\n  getHandler,\n  postHandler,\n  putHandler,\n  deleteHandler,\n];\n","import { setupWorker } from 'msw';\n\nimport { contactsMocks } from './contacts/contacts.mocks';\n\nexport const worker = setupWorker(...contactsMocks);\n","export const apiBaseUrl = process.env.REACT_APP__API_BASE_URL;\nif (!apiBaseUrl) {\n  throw new Error('REACT_APP__API_BASE_URL missing in .env file');\n}\n"],"sourceRoot":""}